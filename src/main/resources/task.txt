//Сделано
- Необходимо реализовать валидацию приходящих данных с форм на стороне сервера сейчас можем сохранить
пользователя без данных, с отрицательными значениями для возраста и зарплаты - Java Bean Validation API

Пакет dao
Класс UserDaoImpl

//Сделано
в методах поиска, обновления и удаления проверяй, что запись с таким id существует, если
нет выбрасывай соответствующее исключение с сообщением об ошибке - EntityNotFoundException

для обновления и сохранения используется метод saveOrUpdate, в котором делегируешь методу
persist, но по факту всегда отрабатывает метод merge, так как метод entityManager.contains(user)
всегда возвращает false (в deleteUser тоже самое).

Для сохранения новых сущностей рекомендуется использовать метод persist, для обновления существующих
 метод merge - раздели логику на два отдельных метода в слое dao, в сервисном классе в методе addOrUpdateUser
 можешь проверить id приходящего объекта и на основе проверки вызывать либо метод сохранения dao класса, либо обновления.

//Сделано
В методе удаления получи сущность из БД, проверь что метод вернул не null и удаляй, если null
выбрасывай соответствующее исключение

//Сделано
Пакет service
Класс UserServiceImpl
для методов, которые читают данные, не нужна транзакция на запись